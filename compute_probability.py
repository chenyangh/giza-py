# This file readings the model generated by GIZA ++, uses it to compute the alignment probability of any given stences



model_path = 'test10K'


# Read src and trg dictionaries

src_dict_path = f"{model_path}/src_trg_swm.trn.src.vcb"
trg_dict_path = f"{model_path}/src_trg_swm.trn.trg.vcb"

src_dict = {}
trg_dict = {}

with open(src_dict_path, 'r') as f:
    for line in f:
        line = line.strip()
        if line == '':
            continue
        word, idx = line.split(' ')
        src_dict[int(idx)] = word
        
with open(trg_dict_path, 'r') as f:
    for line in f:
        line = line.strip()
        if line == '':
            continue
        word, idx = line.split(' ')
        trg_dict[int(idx)] = word
        

# Read T table
t_table_path = f"{model_path}/src_trg_swm.t3.final"
t_table = {}
with open(t_table_path, 'r') as f:
    for line in f:
        line = line.strip()
        if line == '':
            continue
        src, trg, prob = line.split(' ')
        t_table[(src, trg)] = float(prob)



# Read Fertility table
fertility_table_path = f"{model_path}/src_trg_swm.n3.final"
n_table = {}
with open(fertility_table_path, 'r') as f:
    for line in f:
        line = line.strip()
        if line == '':
            continue
        tokens = line.split(' ')
        n_table[int(tokens[0])] = [int(x) for x in tokens[1:]]


# Read the distortion table
distortion_table_path = f"{model_path}/src_trg_swm.d3.final"
d_table = {}
with open(distortion_table_path, 'r') as f:
    for line in f:
        line = line.strip()
        if line == '':
            continue
        src_pos, trg_pos, prob = line.split(' ')
        d_table[(src_pos, trg_pos)] = float(prob)
        


